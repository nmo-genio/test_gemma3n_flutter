name: Build Flutter Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: '34.0.0'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Configure environment variables
      run: |
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_ENV

    - name: Clean Flutter project
      run: |
        flutter clean
        flutter pub get

    - name: Fix Gradle properties
      run: |
        cd android
        echo "org.gradle.java.home=$JAVA_HOME" > gradle.properties
        echo "org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8" >> gradle.properties
        echo "android.useAndroidX=true" >> gradle.properties
        echo "android.enableJetifier=true" >> gradle.properties
        chmod +x gradlew

    - name: Analyze Flutter code (continue on error)
      run: flutter analyze --no-fatal-infos
      continue-on-error: true

    - name: Run Flutter tests (continue on error)
      run: flutter test
      continue-on-error: true

    - name: Create keystore for signing
      run: |
        mkdir -p android/app
        keytool -genkey -v -keystore android/app/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias release \
          -dname "CN=Flutter Demo, OU=Flutter, O=Demo, L=Demo, S=Demo, C=US" \
          -storepass flutter123 -keypass flutter123

    - name: Create key.properties
      run: |
        echo "storePassword=flutter123" > android/key.properties
        echo "keyPassword=flutter123" >> android/key.properties
        echo "keyAlias=release" >> android/key.properties
        echo "storeFile=key.jks" >> android/key.properties

    - name: Build APK (Debug)
      run: flutter build apk --debug
      env:
        JAVA_HOME: ${{ env.JAVA_HOME }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Build APK (Release)
      run: flutter build apk --release
      env:
        JAVA_HOME: ${{ env.JAVA_HOME }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 30

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/app/outputs/flutter-apk/app-release.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
